name: xdatasets Testing Suite

on:
  push:
    branches:
      - main
    paths-ignore:
      - .cruft.json
      - CHANGES.rst
      - README.rst
      - pyproject.toml
      - tests/test_xdatasets.py
      - xdatasets/__init__.py
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (Python${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.x"
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4.1.1
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Run linting suite
        run: |
          python -m tox -e lint

  test:
    name: test-${{ matrix.tox-env }} (Python${{ matrix.python-version }})
    needs: lint
    runs-on: ubuntu-latest
    env:
      ESMF_VERSION: "v8.5.0"
    strategy:
      matrix:
        include:
          - tox-env: "py38"
            python-version: "3.8"
          - tox-env: "py39"
            python-version: "3.9"
          - tox-env: "py310"
            python-version: "3.10"
          - tox-env: "py311"
            python-version: "3.11"
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Install NetCDF
        run: |
          sudo apt-get -y update
          sudo apt install libnetcdf-dev libnetcdff-dev
      - name: Install ESMF
        uses: esmf-org/install-esmf-action@v1
        env:
          ESMF_NETCDF: nc-config
        with:
          cache: true
          version: ${{ env.ESMF_VERSION }}
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          pip install tox
      - name: Test with tox
        run: |
          tox -e ${{ matrix.tox-env }}
        env:
          ESMF_VERSION: ${{ env.ESMF_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.tox-env }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

#  test-conda:
#    name: Test with Python${{ matrix.python-version }} (Anaconda)
#    needs: lint
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version: ["3.9", "3.10", "3.11"]
#    defaults:
#      run:
#        shell: bash -l {0}
#    steps:
#      - uses: actions/checkout@v4.1.1
#      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
#        uses: mamba-org/setup-micromamba@v1
#        with:
#          cache-downloads: true
#          environment-file: environment-dev.yml
#          create-args: >-
#            mamba
#            python=${{ matrix.python-version }}
#      - name: Conda and Mamba versions
#        run: |
#          mamba --version
#          echo "micromamba $(micromamba --version)"
#      - name: Install xdatasets
#        run: |
#          python -m pip install --no-deps .
#      - name: Check versions
#        run: |
#          conda list
#          python -m pip check || true
#      - name: Test with pytest
#        run: |
#          python -m pytest --cov xdatasets
#      - name: Report coverage
#        run: |
#          python -m coveralls
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          COVERALLS_FLAG_NAME: run-Python${{ matrix.python-version }}-conda
#          COVERALLS_PARALLEL: true
#          COVERALLS_SERVICE_NAME: github

#  finish:
#    needs:
#      - test-pypi
#      - test-conda
#    runs-on: ubuntu-latest
#    container: python:3-slim
#    steps:
#      - name: Coveralls Finished
#        run: |
#          pip install --upgrade coveralls
#          coveralls --finish
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          COVERALLS_SERVICE_NAME: github
