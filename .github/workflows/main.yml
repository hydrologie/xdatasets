name: xdatasets Testing Suite

on:
  push:
    branches:
      - main
    paths-ignore:
      - HISTORY.rst
      - MANIFEST.in
      - README.rst
      - setup.py
      - setup.cfg
      - xdatasets/__init__.py
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
# Temporarily bypass checks until code passes linting
#  black:
#    name: Black (Python${{ matrix.python-version }})
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version:
#          - "3.8"
#    steps:
#      - name: Cancel previous runs
#        uses: styfle/cancel-workflow-action@0.11.0
#        with:
#          access_token: ${{ secrets.GITHUB_TOKEN }}
#      - uses: actions/checkout@v3
#      - name: Set up Python${{ matrix.python-version }}
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install tox
#        run: pip install tox
#      - name: Run linting suite
#        run: tox -e black

  test:
    name: test-${{ matrix.tox-env }} (Python${{ matrix.python-version }})
#    needs: black
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tox-env: "py38"
            python-version: "3.8"
          - tox-env: "py39"
            python-version: "3.9"
          - tox-env: "py310"
            python-version: "3.10"
          - tox-env: "py311"
            python-version: "3.11"
    steps:
      - uses: actions/checkout@v4
      - name: Install NetCDF
        run: |
          sudo apt-get -y update
          sudo apt install libnetcdf-dev libnetcdff-dev
      - name: Install ESMF
        uses: esmf-org/install-esmf-action@v1
        env:
          ESMF_NETCDF: nc-config
        with:
          cache: true
          version: develop
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: pip install tox
      - name: Test with tox
        run: tox -e ${{ matrix.tox-env }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.tox-env }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

#  finish:
#    needs:
#      - test
#    runs-on: ubuntu-latest
#    container: python:3-slim
#    steps:
#      - name: Coveralls Finished
#        run: |
#          pip install --upgrade coveralls
#          coveralls --finish
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          COVERALLS_SERVICE_NAME: github
