[build-system]
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "xdatasets"
authors = [
  {name = "Sebastien Langlois", email = "sebastien.langlois62@gmail.com"}
]
maintainers = [
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"}
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.8.0"
keywords = [
  "xdatasets",
  "hydrology",
  "meteorology",
  "climate",
  "climatology",
  "netcdf",
  "gridded analysis"
]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Hydrology",
  "Programming Language :: Python :: Implementation :: CPython"
]
dynamic = ["description", "version"]
dependencies = [
  "bottleneck>=1.3.1",
  # This is differently named in conda-forge
  "cf-xarray>=0.6.1",
  "cftime>=1.4.1",
  "clisops>=0.9.2",
  "dask[array]>=2.6",
  "geopandas",
  "intake",
  "intake-xarray>=0.6.1",
  "ipython",
  "jsonpickle",
  "numba",
  "numpy>=1.16",
  "pandas>=0.23",
  "pint>=0.10",
  "scipy>=1.2",
  "tqdm",
  # FIXME: This needs to be revisited. `xagg` should be an optional dependency, reliant on Anaconda.
  # "xagg-no-xesmf-deps",
  # "xagg",
  "xarray>=2023.1",
  "zarr>=2.11.1"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "black[jupyter]>=23.11.0",
  "blackdoc>=0.3.9",
  "bump-my-version>=0.12.0",
  "coverage",
  "coverage>=6.2.2,<7.0.0",
  "coveralls>=3.3.1",
  "flake8-alphabetize>=0.0.21",
  "flake8-rst-docstrings>=0.3.0",
  "flake8>=6.1.0",
  "flit",
  "ipython<8.0", # this needed when testing see #1005
  "isort>=5.12.0",
  "mypy",
  "nbval",
  "pip>=23.1.2",
  "pre-commit>=3.3.2",
  "pylint",
  "pytest-cov>=4.0.0",
  "pytest>=7.3.1",
  "tokenize-rt",
  "tox>=4.5.1",
  "watchdog>=3.0.0",
  "xdoctest"
]
docs = [
  # Documentation and examples
  "cartopy",
  "distributed>=2.0",
  "furo",
  "geoviews",
  "hvplot",
  "ipykernel",
  "ipython",
  "jupyter_client",
  "matplotlib",
  "nbsphinx",
  "nbsphinx",
  "nc-time-axis",
  "netCDF4",
  "pandoc",
  "panel",
  "pooch",
  "s3fs",
  "sphinx-codeautolink",
  "sphinx-copybutton",
  "sphinx-rtd-theme>=1.0",
  "sphinx>=7.0",
  "sphinxcontrib-confluencebuilder"
]

[project.urls]
"Homepage" = "https://hydrologie.github.io/xdatasets/"
"Changelog" = "https://xdatasets.readthedocs.io/en/stable/Changes.html"
"Source" = "https://github.com/hydrologie/xdatasets"
"Issue tracker" = "https://github.com/hydrologie/xdatasets/issues"

[tool]

[tool.black]
target-version = [
  "py38",
  "py39",
  "py310",
  "py311"
]

[tool.bumpversion]
current_version = "0.3.0"
commit = true
tag = false
tag_name = "v{new_version}"
allow_dirty = false
serialize = ["{major}.{minor}.{patch}"]
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"

[[tool.bumpversion.files]]
filename = "xdatasets/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "tests/test_xdatasets.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = ".cruft.json"
search = "\"version\": \"{current_version}\""
replace = "\"version\": \"{new_version}\""

[tool.coverage.run]
relative_files = true
include = ["xdatasets/*"]
omit = ["tests/*.py"]

[tool.flit.sdist]
include = [
  ".zenodo.json",
  "AUTHORS.rst",
  "CHANGES.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "docs/notebooks/*.ipynb",
  "environment-dev.yml",
  "environment-docs.yml",
  "docs/_static/_images/*.gif",
  "docs/_static/_images/*.jpg",
  "docs/_static/_images/*.png",
  "docs/_static/_images/*.rst",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "tests/*.py",
  "tox.ini",
  "xdatasets"
]
exclude = [
  "*.py[co]",
  "__pycache__",
  ".coveralls.yml",
  ".cruft.json",
  ".editorconfig",
  ".flake8",
  ".gitignore",
  ".nojekyll",
  ".pre-commit-config.yaml",
  ".readthedocs.yml",
  ".yamllint.yaml",
  "docs/_*",
  "docs/apidoc/modules.rst",
  "docs/apidoc/xdatasets*.rst"
]

[tool.isort]
profile = "black"
py_version = 38

[tool.mypy]
python_version = 3.8
show_error_codes = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
  "--verbose",
  "--color=yes"
]
filterwarnings = ["ignore::UserWarning"]
testpaths = "tests"

[tool.ruff]
src = [""]
line-length = 150
target-version = "py38"
exclude = [
  ".eggs",
  ".git",
  "build",
  "docs",
  "tests"
]
ignore = [
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D400", # First line should end with a period
  "D401", # First line should be in imperative mood
  "E722" # do not use bare except, specify exception instead
]
select = [
  "C9",
  "D",
  "E",
  "F",
  "W"
]

[tool.ruff.flake8-bandit]
check-typed-exception = true

[tool.ruff.format]
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["xdatasets"]
case-sensitive = true
detect-same-package = false
lines-after-imports = 1
no-lines-before = ["future", "standard-library"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.per-file-ignores]
"xdatasets/**/__init__.py" = ["F401", "F403"]

[tool.ruff.pycodestyle]
max-doc-length = 180

[tool.ruff.pydocstyle]
convention = "numpy"
